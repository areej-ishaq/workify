What is a Session?
In web applications, a session is a way to store information about a user or their interactions with 
the application for the duration of their visit (or session). A session allows the server to recognize 
the user across multiple requests, even though HTTP itself is a stateless protocol (meaning each request 
is independent of others).

When a session is created, the server typically assigns a session ID to the user. This ID is sent to the 
user's browser (usually in a cookie) and is used to associate the user's subsequent requests with their 
stored session data on the server.

How a Session Works in Spring Boot
    Session Creation:
        A session is created when the user accesses the application, usually during login or the first 
        interaction with the server.
        Spring Boot uses the HttpSession object to manage session data.

    Session Storage:
        Information about the user or their activity (e.g., user name, preferences) can be stored in the 
        session.
        The session data is server-side and tied to the user's session ID.

    Session Lifetime:
        The session exists until:
            It times out (default timeout in Spring Boot is 30 minutes, configurable).
            It is explicitly invalidated.
            The server restarts, unless sessions are persisted.